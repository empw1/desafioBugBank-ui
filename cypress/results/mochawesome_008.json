{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-07T17:08:59.360Z",
    "end": "2025-08-07T17:09:27.284Z",
    "duration": 27924,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c5e5d18e-0fda-4859-891f-2ad477f78814",
      "title": "",
      "fullFile": "cypress\\e2e\\features\\saldo.feature",
      "file": "cypress\\e2e\\features\\saldo.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1b0d5414-31c5-4219-b582-cfc0083c398c",
          "title": "Saldo",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Transferência de valores entre contas",
              "fullTitle": "Saldo Transferência de valores entre contas",
              "timedOut": null,
              "duration": 7102,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c44cbff0-4676-44bd-969e-9d67df6483e2",
              "parentUUID": "1b0d5414-31c5-4219-b582-cfc0083c398c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Saque de valores maiores que o saldo disponível",
              "fullTitle": "Saldo Saque de valores maiores que o saldo disponível",
              "timedOut": null,
              "duration": 4135,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "322ae483-50ab-4401-ba3b-c1c0f5f565bc",
              "parentUUID": "1b0d5414-31c5-4219-b582-cfc0083c398c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Transferência para uma conta inexistente",
              "fullTitle": "Saldo Transferência para uma conta inexistente",
              "timedOut": null,
              "duration": 5067,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f29e9cb5-f8cd-4136-a12c-be2ead485438",
              "parentUUID": "1b0d5414-31c5-4219-b582-cfc0083c398c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de saque sem saldo suficiente e verificação da mensagem de erro",
              "fullTitle": "Saldo Tentativa de saque sem saldo suficiente e verificação da mensagem de erro",
              "timedOut": null,
              "duration": 3790,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ff34142e-3e5a-4a2c-a1c7-bfe1a09b118e",
              "parentUUID": "1b0d5414-31c5-4219-b582-cfc0083c398c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verificação de saldo após transações",
              "fullTitle": "Saldo Verificação de saldo após transações",
              "timedOut": null,
              "duration": 7704,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fadee617-2c2e-48a1-8b57-a6a964ffd322",
              "parentUUID": "1b0d5414-31c5-4219-b582-cfc0083c398c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c44cbff0-4676-44bd-969e-9d67df6483e2",
            "322ae483-50ab-4401-ba3b-c1c0f5f565bc",
            "f29e9cb5-f8cd-4136-a12c-be2ead485438",
            "ff34142e-3e5a-4a2c-a1c7-bfe1a09b118e",
            "fadee617-2c2e-48a1-8b57-a6a964ffd322"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27798,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}